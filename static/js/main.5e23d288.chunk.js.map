{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyPressEvent","event","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMqBA,E,4MACnBC,MAAe,CACbC,IAAK,I,EAWPC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,O,uDAT7B,WACEI,SAASC,iBAAiB,QAASC,KAAKL,uB,kCAG1C,WACEG,SAASG,oBAAoB,QAASD,KAAKL,uB,oBAO7C,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACGR,EACC,oBAAGQ,UAAU,eAAb,sCAEIR,EAFJ,OAMA,mBAAGQ,UAAU,eAAb,2C,GA7BuBC,a,MCFjCC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.5e23d288.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport default class App extends Component {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPressEvent);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPressEvent);\n  }\n\n  handleKeyPressEvent = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        {key ? (\n          <p className=\"App__message\">\n            The last pressed key is [\n            { key }\n            ]\n          </p>\n        ) : (\n          <p className=\"App__message\">Nothing was pressed yet</p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}